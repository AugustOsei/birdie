version: '3.8'

services:
  # Frontend - Vite build served by nginx
  frontend:
    build:
      context: ./birdie-app
      dockerfile: Dockerfile
    container_name: birdie-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=https://birdie.augustwheel.com
    networks:
      - birdie-network
    depends_on:
      - backend

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: birdie-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/data/subscribers.db
    volumes:
      - ./data:/app/data
    networks:
      - birdie-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: birdie-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    networks:
      - birdie-network
    depends_on:
      - frontend
      - backend

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: birdie-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  birdie-network:
    driver: bridge

volumes:
  db-data:
